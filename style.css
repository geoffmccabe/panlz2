/* Import Roboto font */
@import url('https://fonts.googleapis.com/css2?family=Roboto:wght@400;500;700&display=swap');

/* CSS Custom Properties (Variables) */
:root {
    --panel-bg: #ffffff;
    --panel-border-color: #cccccc;
    --panel-header-bg: #f0f0f0;
    --panel-title-color: #333333;
    --panel-text-color: #333333;
    --panel-corner-rounding: 10px; /* Default */
    --panel-padding: 10px; /* Default */
    --panel-spacing: 10px; /* Default */
    --container-background-image: url('https://github.com/geoffmccabe/panlz2/blob/main/images/percs_bkgd1.webp?raw=true'); /* Updated URL */
    --modal-bg: rgba(0, 0, 0, 0.5);
    --modal-content-bg: #fff;
    --base-grid-unit: calc(100% / 6); /* 1/6th of container width */
    --panel-header-height: calc(var(--base-grid-unit) / 2); /* 1/12th of container width */
}

/* Basic Reset */
* {
    box-sizing: border-box;
    margin: 0;
    padding: 0;
}

body {
    font-family: 'Roboto', sans-serif;
    line-height: 1.6;
    background-color: #f4f4f4; /* Fallback background */
    color: var(--panel-text-color);
}

#panlz-container {
    display: grid;
    /* Adjust grid columns based on panel widths dynamically via JS if needed,
       or use a library that manages this. Start with a simple setup. */
    grid-template-columns: repeat(auto-fill, minmax(calc(var(--base-grid-unit) - var(--panel-spacing)), 1fr));
    gap: var(--panel-spacing);
    padding: var(--panel-spacing);
    min-height: 100vh;
    background-image: var(--container-background-image);
    background-size: cover;
    background-position: center;
    background-attachment: fixed; /* Optional: keeps background fixed during scroll */
}

.panel {
    background-color: var(--panel-bg);
    border: 1px solid var(--panel-border-color);
    border-radius: var(--panel-corner-rounding);
    overflow: hidden; /* Ensures content respects border-radius */
    display: flex;
    flex-direction: column;
    /* Default height to be square-ish based on 1/6th width unit */
    /* Actual height will often be determined by content or explicit setting */
    min-height: var(--base-grid-unit);
    position: relative; /* For absolute positioning of internal elements if needed */

    /* Apply custom styles set via JS */
    background-image: var(--panel-custom-background-image, none);
    background-size: cover;
    background-position: center;
    border-radius: var(--panel-custom-border-radius, var(--panel-corner-rounding));

    /* Transition for smooth appearance changes (optional) */
    transition: transform 0.2s ease-out, box-shadow 0.2s ease-out;
}

/* Width Classes */
.panel.width-1-6 { grid-column: span 1; }
.panel.width-1-3 { grid-column: span 2; }
.panel.width-1-2 { grid-column: span 3; }
.panel.width-2-3 { grid-column: span 4; }
.panel.width-5-6 { grid-column: span 5; }
.panel.width-full { grid-column: span 6; }
/* Note: These spans assume a 6-column base grid calculation. Adjust if necessary.
   Real-world grids might need more complex logic or library handling. */


.panel-header {
    background-color: var(--panel-header-bg); /* Fallback if no texture */
    color: var(--panel-title-color);
    padding: 0 var(--panel-padding);
    height: var(--panel-header-height);
    display: flex;
    align-items: center;
    border-bottom: 1px solid var(--panel-border-color);
    flex-shrink: 0; /* Prevent header from shrinking */
    /* Header inherits panel's background texture if applied */
    background-image: inherit;
    background-size: cover;
    background-position: center;
    cursor: grab; /* Indicate header is draggable for panel */
}

.panel-settings-btn {
    background: none;
    border: none;
    font-size: 1.2em;
    cursor: pointer; /* Override grab cursor */
    margin-right: 10px;
    color: inherit;
    padding: 5px;
    flex-shrink: 0; /* Prevent button from shrinking */
}
.panel-settings-btn:hover {
    opacity: 0.7;
}

.panel-title {
    font-weight: 500;
    flex-grow: 1; /* Takes remaining space */
    text-align: center;
    white-space: nowrap;
    overflow: hidden;
    text-overflow: ellipsis;
    pointer-events: none; /* Prevent title from interfering with header drag */
}

.panel-content {
    padding: var(--panel-padding); /* Uses variable */
    flex-grow: 1; /* Takes remaining vertical space */
    overflow-y: auto; /* Allow scrolling if content exceeds height */
    color: var(--panel-text-color); /* Use variable */
    /* Apply custom padding set via JS */
    padding: var(--panel-custom-padding, var(--panel-padding));
}

/* Drag & Drop Styling Placeholders */
.panel.dragging {
    opacity: 0.5;
    border: 2px dashed #007bff;
    cursor: grabbing; /* Indicate dragging */
}

.panel-content.drag-over {
     background-color: #e0f0ff; /* Highlight drop target */
     border: 2px dashed #007bff;
}

.draggable-item {
    cursor: grab;
    padding: 5px;
    margin: 5px 0;
    background-color: #eee;
    border: 1px solid #ddd;
}
.draggable-item:active {
     cursor: grabbing;
}


/* Settings Modal Styles */
.modal {
    /* *** HIDE BY DEFAULT using display: none *** */
    display: none;
    position: fixed;
    z-index: 1000;
    left: 0;
    top: 0;
    width: 100%;
    height: 100%;
    overflow: auto;
    background-color: var(--modal-bg);
    /* We will change display to 'flex' via JS to show it */
    /* align-items: center; (Applied when display: flex) */
    /* justify-content: center; (Applied when display: flex) */
}

/* Style applied when modal is shown via JS */
.modal.is-visible {
    display: flex;
    align-items: center;
    justify-content: center;
}


.modal-content {
    background-color: var(--modal-content-bg);
    margin: auto;
    padding: 20px;
    border: 1px solid #888;
    width: 80%;
    max-width: 600px;
    border-radius: var(--panel-corner-rounding);
    position: relative;
    max-height: 90vh; /* Limit height */
    overflow-y: auto; /* Allow scrolling */
}

.modal-close {
    color: #aaa;
    position: absolute;
    top: 10px;
    right: 15px;
    font-size: 28px;
    font-weight: bold;
    background: none;
    border: none;
    cursor: pointer;
}

.modal-close:hover,
.modal-close:focus {
    color: black;
    text-decoration: none;
    cursor: pointer;
}

.form-group {
    margin-bottom: 15px;
}
.form-group label {
    display: block;
    margin-bottom: 5px;
    font-weight: 500;
}
.form-group input[type="text"],
.form-group input[type="number"],
.form-group input[type="file"],
.form-group textarea {
    width: 100%;
    padding: 8px;
    border: 1px solid #ccc;
    border-radius: 4px;
}
.form-group textarea {
    resize: vertical; /* Allow vertical resize */
}
.form-group input[type="checkbox"] {
   margin-right: 5px;
}
.scope-group label {
    display: inline-flex; /* Align checkbox and text */
    align-items: center;
}

#settings-form button[type="submit"] {
    background-color: #007bff;
    color: white;
    padding: 10px 15px;
    border: none;
    border-radius: 4px;
    cursor: pointer;
    font-size: 1em;
}
#settings-form button[type="submit"]:hover {
    background-color: #0056b3;
}
